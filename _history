{"entries":[{"timestamp":1757214209944,"editorVersion":"2.0.56","changes":[{"type":"edited","filename":"main.ts","patch":[{"start1":0,"length1":2095,"diffs":[[1," "]]}]},{"type":"edited","filename":"pxt.json","patch":[{"start1":234,"length1":45,"diffs":[[1,"    \"languageRestriction\": \"javascript-only\",\n    \"additionalFilePaths\": []\n"]]}]}]},{"timestamp":1757214808861,"editorVersion":"2.0.56","changes":[{"type":"edited","filename":"main.ts","patch":[{"start1":0,"length1":0,"diffs":[[1," namespace advancedCollisions {\r\n     export class Collision {\r\n        private _image: Image\r\n        private _sprite: Sprite \r\n        private _ox: number \r\n        private _oy: number \r\n\r\n        constructor(sprite: Sprite, ox: number, oy: number) {\r\n            this._image = img`.`\r\n            this._sprite = sprite;\r\n            this._ox = ox \r\n            this._oy = oy\r\n        }\r\n\r\n        setAdvancedCollision(collision: Sprite, collisionImage: Image, sprite: Sprite, ox: number, oy: number) {\r\n           collision = sprites.create(collisionImage)\r\n           \r\n           game.onUpdate(() => {\r\n               // for left and right collision\r\n               if (sprite.overlapsWith(collision) && sprite.x <= collision.x) {\r\n                   sprite.x -= ox\r\n               } else if (sprite.overlapsWith(collision) && sprite.x >= collision.x) {\r\n                   sprite.x += ox\r\n               }\r\n              // for up and down collision\r\n               if (sprite.overlapsWith(collision) && sprite.y <= collision.y) {\r\n                   sprite.y -= oy\r\n               } else if (sprite.overlapsWith(collision) && sprite.y >= collision.y) {\r\n                   sprite.y += oy\r\n               }\r\n           })\r\n        }\r\n     }\r\n\r\n     export function createCollision(sprite: Sprite, ox: number, oy: number): Collision {\r\n         const collision = new Collision(sprite, ox, oy)\r\n         return collision\r\n     }\r\n }\r\n\r\nlet sprite = sprites.create(img`\r\n    . . . . . . . . . . b 5 b . . .\r\n    . . . . . . . . . b 5 b . . . .\r\n    . . . . . . . . . b c . . . . .\r\n    . . . . . . b b b b b b . . . .\r\n    . . . . . b b 5 5 5 5 5 b . . .\r\n    . . . . b b 5 d 1 f 5 5 d f . .\r\n    . . . . b 5 5 1 f f 5 d 4 c . .\r\n    . . . . b 5 5 d f b d d 4 4 . .\r\n    b d d d b b d 5 5 5 4 4 4 4 4 b\r\n    b b d 5 5 5 b 5 5 4 4 4 4 4 b .\r\n    b d c 5 5 5 5 d 5 5 5 5 5 b . .\r\n    c d d c d 5 5 b 5 5 5 5 5 5 b .\r\n    c b d d c c b 5 5 5 5 5 5 5 b .\r\n    . c d d d d d d 5 5 5 5 5 d b .\r\n    . . c b d d d d d 5 5 5 b b . .\r\n    . . . c c c c c c c c b b . . .\r\n`, SpriteKind.Player)\r\nsprite"]]}]},{"type":"edited","filename":"pxt.json","patch":[{"start1":173,"length1":46,"diffs":[[1,"        \"assets.json\"\n"]]},{"start1":202,"length1":44,"diffs":[[1,""]]}]},{"type":"added","filename":"test.ts","value":"// tests go here; this will not be compiled when this package is used as an extension.\n"},{"type":"added","filename":"main.blocks","value":"<xml xmlns=\"http://www.w3.org/1999/xhtml\">\n  <variables></variables>\n  <block type=\"pxt-on-start\" x=\"0\" y=\"0\"></block>\n</xml>"},{"type":"added","filename":"collision.ts","value":"namespace advancedCollisions {\n    export class Collision{\n        private _image: Image\n        private _sprite: Sprite\n        private _ox: number\n        private _oy: number\n\n        constructor(sprite: Sprite, ox: number, oy: number) {\n            this._image = img`.`\n            this._sprite = sprite;\n            this._ox = ox\n            this._oy = oy\n        }\n         //% block=\"%collisionImage=tileset_tile_picker %sprite=variables_get(mySprite) %ox %oy\" \n        setAdvancedCollision(collisionImage: Image, sprite: Sprite, ox: number, oy: number) {\n            let collision = sprites.create(collisionImage)\n\n            game.onUpdate(() => {\n                // for left and right collision\n                if (sprite.overlapsWith(collision) && sprite.x <= collision.x) {\n                    sprite.x -= ox\n                } else if (sprite.overlapsWith(collision) && sprite.x >= collision.x) {\n                    sprite.x += ox\n                }\n                // for up and down collision\n                if (sprite.overlapsWith(collision) && sprite.y <= collision.y) {\n                    sprite.y -= oy\n                } else if (sprite.overlapsWith(collision) && sprite.y >= collision.y) {\n                    sprite.y += oy\n                }\n            })\n        }\n    }\n    \n    //% block=\"create a new collision for the tilemap for like new slopes or extra cool effects for the tilemap tile collisions %sprite=variables_get(mySprite) %ox %oy\"\n    export function createCollision(sprite: Sprite, ox: number, oy: number): Collision {\n        const collision = new Collision(sprite, ox, oy)\n        return collision\n    }\n}"}]}],"snapshots":[{"timestamp":1757214209943,"editorVersion":"2.0.56","text":{"main.ts":" ","README.md":" ","assets.json":"","pxt.json":"{\n    \"name\": \"adding collisions by image\",\n    \"description\": \"\",\n    \"dependencies\": {\n        \"device\": \"*\"\n    },\n    \"files\": [\n        \"main.ts\",\n        \"README.md\",\n        \"assets.json\"\n    ],\n    \"preferredEditor\": \"tsprj\",\n    \"languageRestriction\": \"javascript-only\",\n    \"additionalFilePaths\": []\n}\n"}}],"shares":[],"lastSaveTime":1757215200382}